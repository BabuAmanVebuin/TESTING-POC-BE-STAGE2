parameters:
  - name: variableGroup
    type: string

  - name: secretNames
    type: object

  - name: configFile
    type: string
    default: config.env

  - name: secretFile
    type: string
    default: secret.env

  - name: configWorkingDirectory
    type: string

  - name: secretWorkingDirectory
    type: string

steps:
  - bash: |
      az pipelines variable-group list | jq -r --arg NAME "$NAME" '.[] | select(.name == $NAME).variables' > var_group.json
      cat var_group.json
    displayName: Get Variable Group
    workingDirectory: $(System.DefaultWorkingDirectory)
    env:
      NAME: ${{ parameters.variableGroup }}

  - bash: |
      cat $(System.DefaultWorkingDirectory)/var_group.json  | jq -r 'to_entries[] | select(.value.isSecret != true) | "\(.key)=\(.value.value)"' >> ${{ parameters.configFile }}
      cat ${{ parameters.configFile }}
    displayName: Generate config.env
    workingDirectory: ${{ parameters.configWorkingDirectory }}
    env:
      VAR_GROUP: $(VAR_GROUP)

  - ${{ if gt(length(parameters.secretNames), 0) }}:
    - bash: |
        cat $(System.DefaultWorkingDirectory)/var_group.json | jq -r 'to_entries[] | select(.value.isSecret == true) | "\(.key)=$\(.key)"' | envsubst >> secrets/${{ parameters.secretFile }}
        cat secrets/${{ parameters.secretFile }}
      displayName: Generate Secret
      workingDirectory: ${{ parameters.secretWorkingDirectory }}
      env:
        VAR_GROUP: $(VAR_GROUP)
        ${{ each name in parameters.secretNames }}:
          ${{ name }}: $(${{ name }})
